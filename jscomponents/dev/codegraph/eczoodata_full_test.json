{"db":{"schemas":{"code":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/code","type":"object","additionalProperties":false,"required":["code_id","name","description","_meta"],"_zoo_primarykey":"code_id","_zoo_relations":[{"object_field":"relations.parents","to_object_type":"code","relation_primary_key_field":"code_id","relation_add_object_field":"code","backreference":{"field":"relations.parent_of"}},{"object_field":"relations.cousins","to_object_type":"code","relation_primary_key_field":"code_id","relation_add_object_field":"code","backreference":{"field":"relations.cousin_of"}},{"object_field":"_meta.changelog","to_object_type":"user","relation_primary_key_field":"user_id","relation_add_object_field":"user","backreference":{"field":"zoo_contributions.code"}}],"properties":{"code_id":{"type":"string","pattern":"^[a-z0-9_.-]+$","_single_line_string":true,"_description":"An internal identifier for the code.  It must be unique across all codes on the error correction zoo."},"name":{"type":"string","_llm":"standalone","_single_line_string":true,"_description":"The name of the code.  It is listed in multiple places, so don't make it too long."},"short_name":{"type":"string","_llm":"standalone","_single_line_string":true,"_description":"(Optional.) A short name in case the 'name' field is long.  The short name is used in places where space is precious, such as in the navigation links in the header bar.  If no 'short_name' is provided, the 'name' field is used in those places instead."},"description":{"type":"string","_llm":"full","_description":"Describe code subspace as best as you can here.  Anything applicable to a larger parent set of codes (see below) should go in that entry instead of here."},"introduced":{"type":"string","_single_line_string":true,"_llm":"full","_description":"First reference with the code (optional).  This field should be a single ‘\\cite{}’ command with the appropriate reference(s).  Recall that you can cite multiple references with a single ‘\\cite’ command, separating keys with commas."},"physical":{"type":"string","_single_line_string":true},"logical":{"type":"string","_single_line_string":true},"protection":{"_llm":"full","type":"string"},"features":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/code_features","type":"object","additionalProperties":false,"required":[],"properties":{"rate":{"type":"string","_llm":"full"},"magic_scaling_exponent":{"type":"string","_llm":"full"},"encoders":{"type":"array","items":{"type":"string","_llm":"full"}},"general_gates":{"type":"array","items":{"type":"string","_llm":"full"}},"decoders":{"type":"array","items":{"type":"string","_llm":"full"}},"transversal_gates":{"type":"string","_llm":"full"},"fault_tolerance":{"type":"array","items":{"type":"string","_llm":"full"}},"threshold":{"type":"array","items":{"type":"string","_llm":"full"}},"code_capacity_threshold":{"type":"array","items":{"type":"string","_llm":"full"}}}},"realizations":{"type":"array","items":{"_llm":"full","type":"string"}},"notes":{"type":"array","items":{"_llm":"full","type":"string"}},"relations":{"type":"object","additionalProperties":false,"properties":{"parents":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/code_relation_list","type":"array","items":{"type":"object","required":["code_id"],"additionalProperties":false,"properties":{"code_id":{"_single_line_string":true,"type":"string"},"detail":{"_llm":"full","type":"string"},"code":{"_auto_populated":true}}}},"cousins":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/code_relation_list","type":"array","items":{"type":"object","required":["code_id"],"additionalProperties":false,"properties":{"code_id":{"_single_line_string":true,"type":"string"},"detail":{"_llm":"full","type":"string"},"code":{"_auto_populated":true}}}},"parent_of":{"_auto_populated":true,"type":"array","items":{"type":"object","properties":{"detail":{"_llm":"full"}}}},"cousin_of":{"_auto_populated":true,"type":"array","items":{"type":"object","properties":{"detail":{"_llm":"full"}}}},"defines_kingdom":{"_auto_populated":true}}},"_meta":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/meta","_description":"The _meta field contains additional meta-information data about the error correction zoo entry itself.  We store among others the list of people who have contributed to this particular entry.","_use_schemadata":false,"type":"object","additionalProperties":false,"properties":{"changelog":{"_description":"The list of significant edits to this entry, in chronological order. Edits are included only if the contribution is substantial; fixing typos and formatting tweaks are not considered substantial contributions.\nMake sure you add your own name here if you're editing this entry!","type":"array","items":{"type":"object","additionalProperties":false,"required":["user_id","date"],"properties":{"user_id":{"type":"string","_single_line_string":true},"date":{"type":"string","_single_line_string":true,"_description":"(Approximate) date of the modification, in the format YYYY-MM-DD or YYYY-MM"},"notes":{"type":"string","_description":"Any additional notes that are worty to store with regards to this particular edit.  Usually you should leave this blank."}}}},"stub":{"_description":"Set to true if this entry is a stub and is intended to be completed at a later time.","type":"boolean"}}}}},"space":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/space","_zoo_primarykey":"space_id","type":"object","additionalProperties":false,"required":["space_id"],"properties":{"space_id":{"type":"string","_single_line_string":true,"pattern":"^[a-z0-9_.-]+$"},"name":{"type":"string","_single_line_string":true,"_llm":"standalone"},"description":{"type":"string","_llm":"full"}}},"domain":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/domain","_zoo_primarykey":"domain_id","type":"object","additionalProperties":false,"required":["domain_id","name","description"],"properties":{"domain_id":{"type":"string","_single_line_string":true,"pattern":"^[a-z0-9_.-]+$"},"name":{"type":"string","_llm":"standalone","_single_line_string":true},"description":{"type":"string","_llm":"full"},"kingdoms":{"_auto_populated":true}}},"kingdom":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/kingdom","_zoo_primarykey":"kingdom_id","type":"object","additionalProperties":false,"required":["kingdom_id","name","parent_domain","kingdom_code"],"properties":{"kingdom_id":{"type":"string","_single_line_string":true,"pattern":"^[a-z0-9_.-]+$"},"name":{"type":"string","_single_line_string":true,"_llm":"standalone"},"description":{"type":"string","_llm":"full"},"parent_domain":{"type":"object","additionalProperties":false,"properties":{"domain_id":{"type":"string","pattern":"^[a-z0-9_.-]+$","_single_line_string":true}}},"kingdom_code":{"type":"object","additionalProperties":false,"requried":["code_id"],"properties":{"code_id":{"type":"string","_single_line_string":true,"pattern":"^[a-z0-9_.-]+$"},"code":{"_auto_populated":true}}}},"_zoo_relations":[{"object_field":"parent_domain","to_object_type":"domain","relation_primary_key_field":"domain_id","relation_add_object_field":"domain","backreference":{"field":"kingdoms"}},{"object_field":"kingdom_code","to_object_type":"code","relation_primary_key_field":"code_id","relation_add_object_field":"code","backreference":{"field":"relations.defines_kingdom"}}]},"codelist":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/codelist","_zoo_primarykey":"list_id","type":"object","additionalProperties":false,"required":["list_id","title","codes","display"],"properties":{"list_id":{"type":"string","pattern":"^[a-z0-9_.-]+$"},"title":{"type":"string","_llm":"standalone"},"intro":{"type":"string","_llm":"full"},"display":{"type":"object","additionalProperties":false,"properties":{"style":{"type":"string"},"options":{"type":"object"}}},"codes":{"type":"object","additionalProperties":false,"required":["select"],"properties":{"select":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"property_set":{"type":"string"},"domain":{"type":"string"},"descendant_of":{"type":"string"},"cousin_of":{"type":"string"},"manual_code_list":{"type":"array","items":{"type":"string"}}}}}}},"sort":{"type":"object","additionalProperties":false,"properties":{"by":{"type":"string"}}},"metainfo":{"type":"object"}}},"user":{"$schema":"http://json-schema.org/draft-06/schema","$id":"https://errorcorrectionzoo.org/schemas/user","type":"object","additionalProperties":{},"required":["user_id","name"],"_zoo_primarykey":"user_id","properties":{"user_id":{"type":"string","pattern":"^[a-zA-Z0-9]+$","_single_line_string":true,"_description":"A unique, internal identifier for the user.","_zoo_search":{"include_in_index":false}},"name":{"type":"string","_single_line_string":true,"_description":"The user's full name, as it should be displayed.","_zoo_search":{"include_in_index":true}},"zooteam":{"type":"string","_single_line_string":true,"_description":"Zoo team indicates membership to a particular \"team\" (Core, Veterinarians, Code Contributors).  Leave blank for code contributors.","_zoo_search":{"include_in_index":false}},"zoorole":{"type":"string","_single_line_string":true,"_description":"Zoo role is applicable to core team members, otherwise omit field.","_zoo_search":{"include_in_index":false}},"githubusername":{"type":"string","_single_line_string":true,"_description":"The user's username on github.com"},"gscholaruser":{"type":"string","_single_line_string":true,"_description":"The user's Google scholar profile ID","_zoo_search":{"include_in_index":false}},"pageurl":{"type":"string","_single_line_string":true,"_description":"The user's web page URL","_zoo_search":{"include_in_index":false}},"avatarurl":{"type":"string","_single_line_string":true,"_description":"A link to a profile picture (image) for this user","_zoo_search":{"include_in_index":false}},"zoo_contributions":{"type":"object","_auto_populated":true,"_zoo_search":{"include_in_index":false},"properties":{"code":{"type":"array","items":{}}}}}}},"objects":{"code":{"css":{"code_id":"css","physical":"qubits","logical":"qubits","name":"Calderbank-Shor-Steane (CSS) stabilizer code","introduced":"\\cite[hello]{arXiv:quant-ph/9512032}\\cite{doi:10.1103/PhysRevLett.77.793,arXiv:quant-ph/9601029}","description":"An \\([[n,k,d]]\\) stabilizer code admitting a set of stabilizer generators that are either \\(Z\\)-type or \\(X\\)-type Pauli strings. The stabilizer generator matrix is of the form\n\\begin{align}\nH=\\begin{pmatrix}0 & H_{Z}\\\\\nH_{X} & 0\n\\end{pmatrix}\n\\label{eq:parity}\n\\end{align}\nsuch that the rows of the two blocks must be orthogonal\n\\begin{align}\nH_X H_Z^T=0~.\n\\label{eq:comm}\n\\end{align}\nThe above condition guarantees that the \\(X\\)-stabilizer generators, defined in the symplectic representation as rows of \\(H_X\\), commute with the \\(Z\\)-stabilizer generators associated with \\(H_Z\\).\n\n\\begin{table}\n  \\begin{cells}\n    \\celldata<rH>{One\\\\ Two\\\\ Three}\n    \\celldata[1-;2]{1\\\\ 2\\\\ 3}\n  \\end{cells}\n\\end{table}\n\nEncoding is based on two related \\hyperref[code:binary_linear]{binary linear codes}, an \\([n,k_X,d^\\prime_X]\\) code \\(C_X\\) and \\([n,k_Z,d^\\prime_Z]\\) code \\(C_Z\\), satisfying \\(C_X^\\perp \\subseteq C_Z\\). The resulting CSS code has \\(k=k_X+k_Z-n\\) logical qubits and distance \\(d\\geq\\min\\{d^\\prime_X,d^\\prime_Z\\}\\). The \\(H_X\\) (\\(H_Z\\)) block of \\(H\\) \\eqref{eq:parity} is the parity-check matrix of the code \\(C_X\\) (\\(C_Z\\)). The requirement \\(C_X^\\perp \\subseteq C_Z\\) guarantees \\eqref{eq:comm}.\nBasis states for the code are, for \\(\\gamma \\in C_X\\),\n\\begin{align}\n|\\gamma + C_Z^\\perp \\rangle = \\frac{1}{\\sqrt{|C_Z^\\perp|}} \\sum_{\\eta \\in C_Z^\\perp} |\\gamma + \\eta\\rangle.\n\\end{align}\n\nA CSS code has \\textit{stabilizer weight} \\(w\\) if the highest weight of any stabilizer generator is \\(w\\), i.e., any row of \\(H_X\\) and \\(H_Z\\) has weight at most \\(w\\). In the context of comparing weight as well as of determining distances for noise models biased toward \\(X\\)- or \\(Z\\)-type errors, an extended notation for \\textit{asymmetric} CSS codes is \\([[n,k,(d_X,d_Z),w]]\\) or \\([[n,k,d_X/d_Z,w]]\\). The quantity \\(\\min\\{d_X,d_Z\\}\\) is often called the \\textit{worst-case minimum distance}.\n\n\n\\subsection{CSS-to-homology correspondence}\n\n\\begin{defterm}{CSS-to-homology correspondence}\n\\label{topic:CSS-to-homology-correspondence}\nCSS codes and their properties can be formulated in terms of homology theory, yielding a powerful correspondence between codes and chain complexes, the primary homological structures.\nThere exists a many-to-one mapping from size three chain complexes to CSS codes \\cite{doi:10.1070/RM1997v052n06ABEH002155,arXiv:quant-ph/0605094,arXiv:1311.0885,arXiv:1802.01520} that allows one to extract code properties from topological features of the complexes. Codes constructed in this manner are sometimes called \\textit{homological CSS codes}, but they are equivalent to CSS codes. This mapping of codes to manifolds allows the application of structures from topology to error correction, yielding various QLDPC codes with favorable properties.\n\\end{defterm}\n\nA \\textit{chain complex} of size three is given by binary vector spaces \\(A_2\\), \\(A_1\\), \\(A_0\\) and binary matrices \\(\\partial_{i=1,2}\\) (called \\textit{boundary operators}) \\(A_i\\) to \\(A_{i-1}\\) that satisfy \\(\\partial_1 \\partial_2 = 0\\). Such a complex is typically denoted as\n\\begin{align}\nA_2 \\xrightarrow{\\partial_2} A_1 \\xrightarrow{\\partial_1} A_0~.\n\\label{eq:chain}\n\\end{align}\nOne constructs a CSS code by associating a physical qubit to every basis element of \\(A_1\\), and defining parity-check matrices \\(H_X=\\partial_1^T\\) and \\(H_Z=\\partial_2\\)). That way, the spaces \\(A_0\\) and \\(A_2\\) can be associated with \\(X\\)-type and \\(Z\\)-type Pauli operators, respectively, and boundary operators determine the Paulis making up the stabilizer generators. The requirement \\(\\partial_1 \\partial_2 = 0\\) guarantees that the \\(X\\)-stabilizer generators associated with \\(H_X\\) commute with the \\(Z\\)-stabilizer generators associated with \\(H_Z\\).\n\nUsually, the chain complex \\eqref{eq:chain} used in the construction comes from the chain complex associated with a cellulation of a manifold. When the manifold is a two-dimensional surface, its entire chain is used. Higher-dimensional manifolds allow for longer chain complexes, and one can use the three largest non-trivial vector spaces in its chain.\n","protection":"Detects errors on \\(d-1\\) qubits, corrects errors on \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) qubits.\n\nUsing the relation to chain complexes, the number of encoded logical qubits is equal to the dimension of the first \\(\\mathbb{Z}_2\\)-homology of the chain complex, \\(H_1(\\partial, \\mathbb{Z}_2) = \\frac{\\text{Ker}(\\partial_1)}{\\text{Im}(\\partial_2)}\\). The distance of the CSS code is equal to the minimum of the combinatorial (\\(d-1\\))-systole of the cellulated \\(d\\)-dimensional manifold and its dual.\n","features":{"rate":"For a depolarizing channel with probability \\(p\\), CSS codes allowing for arbitrarily accurate recovery exist with asymptotic rate \\(1-2h(p)\\), where \\(h\\) is the binary entropy function \\cite{arxiv:quant-ph/0110143}.","encoders":["Stabilizer measurement \\cite{arxiv:1404.2495}."],"transversal_gates":"CNOT gates. Self-dual CSS codes admit transversal Clifford gates.","general_gates":["LDPC CSS code symmetries called \\(XZ\\)-dualities allow for fold-transversal gates, i.e., transversal gates followed by qubit permutations \\cite{arxiv:2202.06647}."],"fault_tolerance":["Steane error correction \\cite{arXiv:quant-ph/9611027}.","Parallel syndrome extraction for distance-three codes can be done fault-tolerantly using one flag qubit \\cite{arXiv:2208.00581}."],"code_capacity_threshold":["Bounds on code capacity thresholds for various noise models exist in terms of stabilizer generator weights \\cite{arxiv:1208.2317,arxiv:1412.6172}."],"decoders":["Coherent decoders allow for measurement-free error correction \\cite{arxiv:2109.00086}. One method is table/multi-control decoding \\cite{arXiv:1002.1536}, which scales exponentially with the number of ancillas used in syndrome measurement. Another method, the Ising-based decoder, utilizes the mapping of the effect of the noise to a statistical mechanical model \\cite{arxiv:quant-ph/0110143,arXiv:2002.11733} such that the decoding problem maps to preparation of the ground state of an Ising model."]},"realizations":["Fully homomorphic encryption \\cite{arxiv:1708.09156}.","Entanglement purification protocols related to quantum key distribution (QKD) \\cite{arxiv:quant-ph/0003004}."],"notes":["Introduction to \\ref{topic:CSS-to-homology-correspondence} by \\href{https://www.youtube.com/watch?v=SeLpWg_8qlc}{M. Hastings}.","Using linear programming to solve a set of equations and inequalities on weight distribution of a classical self-orthogonal code \\(C=(n, 2^n-k)\\) and its dual, one can find a \\(C\\) such that the \\([[n,k,d]]\\) CSS code constructed using \\(C\\) and its dual would have rate and distance close to the Singleton bound \\cite{arXiv:quant-ph/9608006}.","Original requirement of \\(C_1^\\perp \\subset C_2\\) \\cite{arXiv:quant-ph/9512032} has been relaxed to absorb hypergraph product codes."],"relations":{"parents":[{"code_id":"stabilizer","detail":"Stabilizer generators can be expressed as either only \\(X\\)-type or only \\(Z\\)-type."}],"cousins":[{"code_id":"binary_linear","detail":"Construction uses two related binary linear codes."}]},"_meta":{"changelog":[{"user_id":"PhF","date":"2022-03-05","notes":"These logs are completely fictitious!"},{"user_id":"PhF","date":"2021-01-01"}]},"_zoodb":{"id":"css","source_file_path":"codes/CSS.yml","source_file_modification_token":1673116197053.707}},"binary_linear":{"code_id":"binary_linear","physical":"bits","logical":"bits","name":"Linear binary code","description":"An \\((n,2^k,d)\\) linear code is denoted as \\([n,k]\\) or \\([n,k,d]\\), where \\(d\\) is the code's distance. Its codewords form a linear subspace, i.e., for any codewords \\(x,y\\), \\(x+y\\) is also a codeword. A code that is not linear is called \\textit{nonlinear}.\n\nLinear codes can be defined in terms of a \\textit{generator matrix} \\(G\\), whose rows form a basis for the \\(k\\)-dimensional codespace. Given a message \\(x\\), the corresponding encoded codeword is \\(G^T x\\). The generator matrix can be reduced via coordinate permutations to its \\textit{standard} or \\textit{systematic form} \\(G = [I_k~A]\\), where \\(I_k\\) is a \\(k\\times k\\) identity matrix and \\(A\\) is a \\(k \\times (n-k)\\) binary matrix.\n","protection":"Distance \\(d\\) of a linear code is the number of nonzero entries in the (nonzero) codeword with the smallest such number. Corrects any error set for which no two elements of the set add up to a codeword.\n\nLinear codes admit a \\textit{parity check matrix} \\(H\\), whose columns make up a set of \\textit{parity checks}, i.e., a maximal linearly independent set of vectors that are in the kernel of \\(G\\). It follows that\n\\begin{align}\n  G H^{\\text{T}} = 0 \\mod 2~.\n\\end{align}\n","features":{"rate":"A family of linear codes \\(C_i = [n_i,k_i,d_i]\\) is \\textit{asymptotically good} if the asymptotic rate \\(\\lim_{i\\to\\infty} k_i/n_i\\) and asymptotic distance \\(\\lim_{i\\to\\infty} d_i/n_i\\) are both positive.","decoders":["Decoding an arbitary linear binary code is NP-hard \\cite{doi:10.1109/TIT.1978.1055873}.","Slepian's standard-array decoding \\cite{doi:10.1002/j.1538-7305.1960.tb03958.x}."]},"notes":["Tables of bounds and examples of linear codes for various \\(n\\) and \\(k\\), extending code tables by A. E. Brouwer \\cite{manual:{Andries E. Brouwer, Bounds on linear codes, in: Vera S. Pless and W. Cary Huffman (Eds.), Handbook of Coding Theory, pp. 295-461, Elsevier, 1998.}}, are maintained by M. Grassl at this \\href{http://codetables.markus-grassl.de/}{website}."],"_meta":{"changelog":[{"user_id":"VVA","date":"2022-03-05","notes":"These logs are completely fictitious"},{"user_id":"VVA","date":"2021-01-01"}]},"_zoodb":{"id":"binary_linear","source_file_path":"codes/binary_linear.yml","source_file_modification_token":1673116197053.8342}},"qubits_into_qubits":{"code_id":"qubits_into_qubits","physical":"qubits","logical":"qubits","name":"Qubit code","description":"Encodes \\(K\\)-dimensional Hilbert space into a \\(2^n\\)-dimensional (i.e., \\(n\\)-qubit) Hilbert space. Usually denoted as \\(((n,K))\\) or \\(((n,K,d))\\), where \\(d\\) is the code's distance.","_meta":{"changelog":[{"user_id":"PhF","date":"2022-03-05","notes":"These logs are completely fictitious"},{"user_id":"VVA","date":"2021-01-01"}]},"_zoodb":{"id":"qubits_into_qubits","source_file_path":"codes/qubits_into_qubits.yml","source_file_modification_token":1673116197054.7678}},"stabilizer":{"code_id":"stabilizer","physical":"qubits","logical":"qubits","name":"Stabilizer code","introduced":"\\cite{arXiv:quant-ph/9705052}","description":"An \\(((n,2^k,d))\\) stabilizer code is denoted as \\([[n,k]]\\) or \\([[n,k,d]]\\), where \\(d\\) is the code's distance. Logical subspace is the joint \\(+1\\) eigenspace of a set of \\(2^{n-k}\\) commuting Pauli operators forming the code's stabilizer group. The distance is the minimum weight of a Pauli string that implements a nontrivial logical operation on the code.","protection":"Detects errors on up to \\(d-1\\) qubits, and corrects erasure errors on up to \\(d-1\\) qubits.","features":{"encoders":["Dissipative preparation, for which codespace is steady-state space of a Lindbladian \\cite{arXiv:1310.1036}."]},"relations":{"parents":[{"code_id":"qubits_into_qubits","detail":""}]},"_meta":{"changelog":[{"user_id":"PhF","date":"2022-03-05","notes":"These logs are completely fictitious"},{"user_id":"NotherUser2","date":"2021-09-07","notes":"These logs are completely fictitious"},{"user_id":"VVA","date":"2021-01-01"}]},"_zoodb":{"id":"stabilizer","source_file_path":"codes/stabilizer.yml","source_file_modification_token":1673116197068.9856}},"surface":{"code_id":"surface","physical":"qubits","logical":"qubits","name":"Kitaev's surface code","introduced":"\\cite{doi:10.1007/978-1-4615-5923-8_19,arXiv:quant-ph/9707021}","description":"A family of stabilizer codes whose generators are few-body \\(X\\)-type and \\(Z\\)-type Pauli strings associated to the stars and plaquettes, respectively, of a tessellation of a two-dimensional surface (with a qubit located at each edge of the tesselation). \\textit{Toric code} often either refers to the construction on the two-dimensional torus or is an alternative name for the general construction. The construction on surfaces with boundaries is often called the \\textit{planar code} \\cite{arXiv:quant-ph/9811052}.","protection":"When defined on an \\(L\\times L\\) square tiling of the torus, protects against \\(L\\) errors. More generally, the code distance is related to the homology of the tessellation \\cite{arXiv:quant-ph/0110143}.","features":{"transversal_gates":"Pauli gates on torus geometry.","general_gates":["Clifford gates can be implemented via lattice surgery \\cite{arXiv:1111.4022,arXiv:1709.02318} or braiding defects \\cite{arXiv:quant-ph/0610082,arXiv:quant-ph/0703143,arXiv:1208.0928,arXiv:1609.04673}.","Non-Clifford gates require magic state distillation \\cite{arXiv:1905.06903} or just-in-time decoding \\cite{arXiv:1903.11634}."],"code_capacity_threshold":["\\(10.9\\%\\) with independent \\(X/Z\\) errors for square tiling \\cite{arXiv:0811.0464}.","\\(18.9\\%\\) with depolarizing noise for square tiling \\cite{arXiv:1202.1852}."],"threshold":["\\(10.9\\%\\) with independent \\(X/Z\\) errors for square tiling \\cite{arXiv:0811.0464}.","\\(18.9\\%\\) with depolarizing noise for square tiling \\cite{arXiv:1202.1852}.","\\(50\\%\\) with loss errors for square tiling \\cite{arXiv:0904.3556}.","\\(3.3\\%\\) with phenomenological noise for square tiling \\cite{arXiv:quant-ph/0401101}.","\\(0.5-1.1\\%\\) for various error models \\cite{arXiv:1311.5003}."],"encoders":["Unitary \\cite{arXiv:0712.0348,arXiv:2002.00362,arXiv:2110.02020}.","Dissipative \\cite{arXiv:1310.1036}.","Stabilizer measurement-based \\cite{arXiv:1404.2495}."],"decoders":["Minimum weight perfect-matching \\cite{arXiv:quant-ph/0110143,doi:10.26421/QIC15.1-2-9}, union-find \\cite{arXiv:1709.06218}, renormalization group \\cite{doi:10.26421/QIC14.9-10-1,arXiv:1411.3028}, tensor network \\cite{arXiv:1405.4883}, Markov chain Monte Carlo \\cite{arXiv:1302.2669}, cellular automaton \\cite{arXiv:1511.05579}, machine learning \\cite{arXiv:1610.04238,arXiv:1802.06441,arXiv:1810.07207}."]},"notes":["Toric code introductions from error-correction perspective by \\href{https://boulderschool.yale.edu/2018/boulder-school-2018-lecture-notes}{J. Haah} and condensed-matter perspective by \\href{https://boulderschool.yale.edu/2016/boulder-school-2016-lecture-notes}{M. Levin and C. Nayak}."],"realizations":["Distance-two surface codes have been implemented by Andersen et al. \\cite{arXiv:1912.09410}, Erhard et al. \\cite{arXiv:2006.03071} and Google Quantum AI \\cite{doi:10.1038/s41586-021-03588-y}."],"relations":{"parents":[{"code_id":"css","detail":"Plaquette and star operators are stabilizer generators."}]},"_meta":{"changelog":[{"user_id":"VVA","date":"2022-03-05","notes":"These logs are completely fictitious"},{"user_id":"VVA","date":"2021-01-01"}]},"_zoodb":{"id":"surface","source_file_path":"codes/surface.yml","source_file_modification_token":1673116197069.1973}},"testcode":{"code_id":"testcode","physical":"qubits","logical":"qubits","name":"My Test \\(x:y\\)-Code","introduced":"\\cite{arXiv:1911.00099}","description":"Here is the code's description.  It can span multiple, hard-wrapped lines.\nIt can include citations~\\cite{arXiv:1911.00099}.\nYou can have math like \\(a+b\\) or \\(\\int_0^\\infty f(x)\\,dx\\).  You can also\nwrite \\(\\ket\\psi = \\sum_k \\braket{e_k|\\phi}\\ket{e_k}\\).\n\nThe description field can contain multiple paragraphs, like this.  Each\n\\textbf{paragraph} can contain \\emph{formatted text}, including\n\\href{https://phfaist.com/}{hyperlinks} and direct URLs:\n\\url{https://arxiv.org/}.  The stabilizers are given in \\eqref{eq:stabilizers}.\n\nHave fun\\textbf{!!}\n\nCheck this citation that doesn't resolve with crossref\n\\cite{doi:10.7907/059V-MG69}.\n","protection":"Detects errors on \\(d-1\\) qubits, corrects errors on \\(\\left\\lfloor (d-1)/2\n\\right\\rfloor\\) qubits.\n\n\\begin{figure}\n  \\includegraphics{testfigure}\n  \\caption{Here's a \\textbf{test} figure.}\n  \\label{figure:test1}\n\\end{figure}\n\nWe'll try out some tables with fictitious “Exponents”, too.\n\n\\begin{table}\n  \\includegraphics{testtable}\n  \\caption{A shiny table.}\n  \\label{table:mytabletest}\n\\end{table}\n\n\\begin{figure}\n  \\includegraphics{./testfigure2.png}\n  \\caption{Another \\emph{test} for a figure.  Let's see what happens when \n    we have a really long caption that can span multiple lines like this,\n    without it being necessarily informative.  After all, this article is\n    really only a dummy example meant to test different features of the\n    generator of our pretty site \\url{https://errorcorrectionzoo.org/}.}\n  \\label{figure:test2}\n\\end{figure}\n\nAnd another figure, this time in jpeg format!\n\\begin{figure}\n  \\includegraphics{./scenery}\n  \\caption{Isn't southern Italy simply stunning?}\n  \\label{figure:scenery}\n\\end{figure}\n\nAnother flashy figure:\n\\begin{figure}\n  \\includegraphics{flashyfigure}\n  \\caption{Pretty flashy.}\n  \\label{figure:flashy}\n\\end{figure}\n","notes":["A first note goes here, which includes a \\textbf{\\emph{cross}-reference} to\nthe \\hyperref[code:css]{CSS code}.\n\nMultiple paragraphs here.\\footnote{Do these paragraph breaks work?  Here's\na \\textit{footnote}, by the way.}  Here's also a reference to\n\\ref{figure:test1} and \\ref{figure:test-n-only}.\n","Another thing we should try out is what happens when we have really,\nreally, really long equations.\n\\begin{align}\n  F\\bigl(\\psi, -i[H,\\psi]\\bigr)\n  \\geq\n  F\\bigl(\\mathcal{N}(\\psi), \\mathcal{N}(-i[H,\\psi])\\bigr)\n  \\geq\n  F\\bigl(\\psi, -i[H,\\psi]\\bigr)\n  - 8\\epsilon \\bigl\\Vert{-i[H,\\psi]}\\bigr\\Vert_1\\bigl\\Vert{-i[H,\\psi]}\\bigr\\Vert_\\infty\\ .\n\\end{align}\n","Test citation to book \\cite{doi:10.1017/CBO9780511976667}.  Test citation\nto arXiv entry with incomplete DOI (issue \\#43) \\cite{arXiv:1604.04062}.\nTest citing a preset: \\cite{preset:PreskillNotes}.\nTest citing a preset with citation note:\n\\cite[Chap.~6]{preset:PreskillNotes}.\n","By the way, you can |\\begin{verbatimtext}\\input %verbatim$ text&*~like\nthis.\\end{booh} using the \\begin{vertatimtext} ... \\end {verbatimtext}\nenvironment\\end{verbatimtext}|!\n\nA bug can occur if a paper on the arXiv has a ‘\\%’ sign in its\ntitle:\\cite{arXiv:1907.02554}\n\nAlso let's make sure that pure arXiv citations\nwork:~\\cite{arXiv:quant-ph/0004088} (which also tests citations to\nold-style arxiv ID's).\n","Here's a reference to the \\ref{topic:CSS-to-homology-correspondence}, by\nthe way.\n","A second note goes here.  This one contains a display equation:\n\\begin{align}\n  S_1 &= I\\,Z\\,X\\,X\\,Z\\ ;  \\nonumber\\\\\n  S_2, \\ldots, S_4 &= \\text{cyclical permutations of \\(S_1\\)}\\ .\n  \\label{eq:stabilizers}\n\\end{align}\nNote that the last cyclical permutation of \\(S_1\\) is not included, as it is\ngiven by \\(S_1S_2S_3S_4\\).\n\nYeah!\n\nUse of the \\textit{gather} environment:\n\\begin{gather}\n   A = B + C\\\\\n   x = y + z\n\\end{gather}\n\nUse of the \\textit{split} environment inside align:\n\\begin{align}\n  \\begin{split}\n    A &= B + C\\\\\n    x &= y + z\n  \\end{split}\n\\end{align}\n\nTest a manual citation \\cite{manual:{A. Smith et al., \\emph{Textbook of\nfancy stuff}, Taylor \\& Francis, 1999}}.\n","Figures don't need to have numbers & captions (but then you can't\nreference them):\n\n\\begin{figure}\n  \\includegraphics{testfigure}\n\\end{figure}\n\nOr you can simply have the figure number:\n\n\\begin{figure}\n  \\includegraphics{testfigure}\n  \\label{figure:test-n-only}\n\\end{figure}\n\nOr only a caption on its own:\n\n\\begin{figure}\n  \\includegraphics{testfigure}\n  \\caption{This figure has no number, and I can't refer to it with\n    a ref command.}\n\\end{figure}\n"],"relations":{"parents":[{"code_id":"stabilizer","detail":"Description of how this code relates to stabilizer codes.\\cite{arXiv:1111.0011}"}]},"_meta":{"changelog":[{"user_id":"PhF","date":"2022-03-05","notes":"These logs are completely fictitious"},{"user_id":"VVA","date":"2021-01-01"}]},"_zoodb":{"id":"testcode","source_file_path":"codes/testcode.yml","source_file_modification_token":1673116197069.3909}}},"space":{"bits":{"space_id":"bits","_zoodb":{"id":"bits","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"q-ary_digits":{"space_id":"q-ary_digits","_zoodb":{"id":"q-ary_digits","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"matrices":{"space_id":"matrices","_zoodb":{"id":"matrices","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"rings":{"space_id":"rings","_zoodb":{"id":"rings","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"reals":{"space_id":"reals","_zoodb":{"id":"reals","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"qubits":{"space_id":"qubits","_zoodb":{"id":"qubits","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"qudits":{"space_id":"qudits","_zoodb":{"id":"qudits","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"galois":{"space_id":"galois","_zoodb":{"id":"galois","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"fermions":{"space_id":"fermions","_zoodb":{"id":"fermions","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"oscillators":{"space_id":"oscillators","_zoodb":{"id":"oscillators","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"spins":{"space_id":"spins","_zoodb":{"id":"spins","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"rigid_bodies":{"space_id":"rigid_bodies","_zoodb":{"id":"rigid_bodies","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"categories":{"space_id":"categories","_zoodb":{"id":"categories","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}},"groups":{"space_id":"groups","_zoodb":{"id":"groups","source_file_path":"code_extra/spaces.yml","source_file_modification_token":1673116197053.1975}}},"domain":{"classical_domain":{"domain_id":"classical_domain","name":"Classcial Domain","description":"codes for good ol' computers","_zoodb":{"id":"classical_domain","source_file_path":"codetree/domains.yml","source_file_modification_token":1673116197107.9248}},"quantum_domain":{"domain_id":"quantum_domain","name":"Quantum Domain","description":"codes for quantum systems","_zoodb":{"id":"quantum_domain","source_file_path":"codetree/domains.yml","source_file_modification_token":1673116197107.9248}}},"kingdom":{"qubits_into_qubits":{"parent_domain":{"domain_id":"quantum_domain"},"kingdom_id":"qubits_into_qubits","name":"Qubit Kingdom","kingdom_code":{"code_id":"qubits_into_qubits"},"_zoodb":{"id":"qubits_into_qubits","source_file_path":"codetree/kingdoms.yml","source_file_modification_token":1673116197108.1467}}},"codelist":{"all":{"list_id":"all","title":"Index of all codes\n","intro":"Here are a gigantic list of all the codes, sorted alphabetically, that were\nincluded in the error correction zoo.\n","metainfo":{"some_property":true},"display":{"style":"index","options":{"show_description":false}},"codes":{"select":[{}]},"sort":{"by":"name"},"_zoodb":{"id":"all","source_file_path":"codelists/list_all.yml","source_file_modification_token":1673116197053.384}},"qstabs":{"list_id":"qstabs","title":"Quantum stabilizer codes\n","intro":"Here is a list of stabilizer codes.\n","display":{"style":"table","options":{"cssclass":"xtra-xtra-stretch","columns":[{"property":"name","title":"Code","link_to_code":true,"cssclass":"top left"},{"property":"description","title":"Description","cssclass":"textit","first_paragraph_only":true},{"relationship_property":"stabilizer","property":"detail","title":"Stabilizer Detail","cssclass":"textit","first_paragraph_only":true}]}},"sort":{"by":"name"},"codes":{"select":[{"descendant_of":"stabilizer"},{"cousin_of":"stabilizer"}]},"_zoodb":{"id":"qstabs","source_file_path":"codelists/list_stabilizer.yml","source_file_modification_token":1673116197053.5054}}},"user":{"VVA":{"user_id":"VVA","name":"Victor V Albert","zooteam":"core","zoorole":"zookeeper","githubusername":"valbert4","gscholaruser":"hyddAfkAAAAJ","pageurl":"https://sites.google.com/site/victorvalbert","_zoodb":{"id":"VVA","source_file_path":"users/users_db.yml","source_file_modification_token":1673116197108.435}},"PhF":{"user_id":"PhF","name":"Philippe Faist","zooteam":"core","zoorole":"architect","githubusername":"phfaist","gscholaruser":"rdeNGqMAAAAJ","pageurl":"https://phfaist.com/","_zoodb":{"id":"PhF","source_file_path":"users/users_db.yml","source_file_modification_token":1673116197108.435}},"DanielGottesman":{"user_id":"DanielGottesman","zooteam":"veterinarians","name":"Daniel Gottesman","gscholaruser":"6eJtRigAAAAJ","pageurl":"https://quics.umd.edu/people/daniel-gottesman","avatarurl":"https://quics.umd.edu/sites/quics.umd.edu/files//styles/medium/public/pictures/picture-561-1626034639.jpg","_zoodb":{"id":"DanielGottesman","source_file_path":"users/users_db.yml","source_file_modification_token":1673116197108.435}},"AlexanderBarg":{"user_id":"AlexanderBarg","zooteam":"veterinarians","name":"Alexander Barg","gscholaruser":"nvU3IvEAAAAJ","pageurl":"https://user.eng.umd.edu/~abarg/","githubusername":"AlexanderBarg","avatarurl":"https://user.eng.umd.edu/~abarg/picture1.jpg","_zoodb":{"id":"AlexanderBarg","source_file_path":"users/users_db.yml","source_file_modification_token":1673116197108.435}},"LeonidPryadko":{"user_id":"LeonidPryadko","zooteam":"veterinarians","name":"Leonid Pryadko","gscholaruser":"S8iAOo4AAAAJ","githubusername":"LeonidPryadko","pageurl":"http://www.faculty.ucr.edu/~leonid/","avatarurl":"https://profiles.ucr.edu/api/profilePicture/35106","_zoodb":{"id":"LeonidPryadko","source_file_path":"users/users_db.yml","source_file_modification_token":1673116197108.435}},"User1":{"user_id":"User1","name":"Full User Name","_zoodb":{"id":"User1","source_file_path":"users/users_db.yml","source_file_modification_token":1673116197108.435}},"NotherUser2":{"user_id":"NotherUser2","name":"Full Other User Name","_zoodb":{"id":"NotherUser2","source_file_path":"users/users_db.yml","source_file_modification_token":1673116197108.435}}}}}}